//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherConverter.WCFHostedWindowsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFHostedWindowsService.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/celciustofarenheit", ReplyAction="http://tempuri.org/IWeatherService/celciustofarenheitResponse")]
        double celciustofarenheit(double temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/celciustofarenheit", ReplyAction="http://tempuri.org/IWeatherService/celciustofarenheitResponse")]
        System.Threading.Tasks.Task<double> celciustofarenheitAsync(double temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/farenheittocelcius", ReplyAction="http://tempuri.org/IWeatherService/farenheittocelciusResponse")]
        double farenheittocelcius(double temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/farenheittocelcius", ReplyAction="http://tempuri.org/IWeatherService/farenheittocelciusResponse")]
        System.Threading.Tasks.Task<double> farenheittocelciusAsync(double temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/getmessage", ReplyAction="http://tempuri.org/IWeatherService/getmessageResponse")]
        string getmessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/getmessage", ReplyAction="http://tempuri.org/IWeatherService/getmessageResponse")]
        System.Threading.Tasks.Task<string> getmessageAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : WeatherConverter.WCFHostedWindowsService.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<WeatherConverter.WCFHostedWindowsService.IWeatherService>, WeatherConverter.WCFHostedWindowsService.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double celciustofarenheit(double temp) {
            return base.Channel.celciustofarenheit(temp);
        }
        
        public System.Threading.Tasks.Task<double> celciustofarenheitAsync(double temp) {
            return base.Channel.celciustofarenheitAsync(temp);
        }
        
        public double farenheittocelcius(double temp) {
            return base.Channel.farenheittocelcius(temp);
        }
        
        public System.Threading.Tasks.Task<double> farenheittocelciusAsync(double temp) {
            return base.Channel.farenheittocelciusAsync(temp);
        }
        
        public string getmessage() {
            return base.Channel.getmessage();
        }
        
        public System.Threading.Tasks.Task<string> getmessageAsync() {
            return base.Channel.getmessageAsync();
        }
    }
}
